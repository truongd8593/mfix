stages:
  # - test
  - build
  - deploy

variables:
  AC_BIN: "/nfs/apps/autoconf/2.69/gnu/4.6.4/bin"
  ANACONDA_BIN: "/nfs/apps/Compilers/Python/Anaconda/2.7/x86-64/bin"
  GCC_BIN: "/nfs/apps/Compilers/GNU/6.1.0/bin"
  MINICONDA_BIN: "/nfs/home/0/users/jenkins/miniconda3/bin"
  MINICONDA_BLD: "/nfs/home/0/users/jenkins/miniconda3/conda-bld"
  PYPATH: "/nfs/home/8/public/mfixgui/branches/$CI_BUILD_REF_NAME"

# test:
#   script:
#     - python setup.py test_load_all
#   stage: test
#   only:
#     - develop
#     - tags
#   tags:
#     - windows

# build:src builds a source distribution tarball

# build:src:
#   script:
#     - env PATH="$AC_BIN:$GCC_BIN:$MINICONDA_BIN:$PATH" python2.7 setup.py sdist
#   stage: build
#   only:
#     - develop
#     - tags
#   artifacts:
#     name: "$CI_BUILD_NAME"
#     expire_in: 1 week
#     paths:
#     - dist/*.tar.gz
#   tags:
#     - linux

linux_py2_conda:
  script:
    - rm -rf dist
    - mkdir -p dist
    - env PATH="$AC_BIN:$MINICONDA_BIN:$GCC_BIN:$PATH" conda build --python 2.7 --output-folder dist build-aux/meta.yaml
  stage: build
  only:
    - develop
    - tags
  artifacts:
    name: "$CI_BUILD_NAME"
    expire_in: 1 week
    paths:
      - dist/linux-64/mfix*
  tags:
    - linux

linux_py3_conda:
  image: mwm126/mfix:latest
  script:
    - rm -rf dist
    - mkdir -p dist
    - env PATH="$AC_BIN:$MINICONDA_BIN:$GCC_BIN:$PATH" conda build --python 3.6 --output-folder dist build-aux/meta.yaml
  stage: build
  only:
    - develop
    - tags
  artifacts:
    name: "$CI_BUILD_NAME"
    expire_in: 1 week
    paths:
      - dist/linux-64/mfix*
  tags:
    - linux

linux_py2_whl:
  script:
    - rm -rf dist
    - mkdir -p dist/linux-64
    - env OUTPUT_TYPE_WHEEL=1 PATH="$AC_BIN:$MINICONDA_BIN:$GCC_BIN:$PATH" conda build --python 2.7 build-aux/meta.yaml
    - ls -t "$MINICONDA_BLD/linux-64/mfix*.bz2" | head -n 1 | xargs -i cp {} dist/linux-64
  stage: build
  only:
    - develop
    - tags
  artifacts:
    name: "$CI_BUILD_NAME"
    expire_in: 1 week
    paths:
      - dist/linux-64/mfix*
  tags:
    - linux

mac_py3_whl:
  script:
    - rm -rf dist
    - mkdir -p dist
    - env OUTPUT_TYPE_WHEEL=1 FC=gfortran-6 CC=gcc-6 conda build --python 3.6 --output-folder dist build-aux/meta.yaml
  stage: build
  only:
    - develop
    - tags
  artifacts:
    name: "$CI_BUILD_NAME"
    expire_in: 1 week
    paths:
      - dist/mac-64/mfix*
  tags:
    - mac

windows_py2_conda:
  script:
    - rm -rf dist
    - mkdir dist
    - env conda build --python 2.7 --output-folder dist build-aux/meta.yaml
  stage: build
  only:
    - develop
    - tags
  artifacts:
    name: "$CI_BUILD_NAME"
    expire_in: 1 week
    paths:
      - dist/windows-64/mfix*
  tags:
    - windows

windows_py3_conda:
  script:
    - rm -rf dist
    - mkdir dist
    - env conda build --python 3.4 --output-folder dist build-aux/meta.yaml
  stage: build
  only:
    - develop
    - tags
  artifacts:
    name: "$CI_BUILD_NAME"
    expire_in: 1 week
    paths:
      - dist/windows-64/mfix*
  tags:
    - windows

windows_py3_whl:
  script:
    - rm -rf dist
    - mkdir dist
    - env OUTPUT_TYPE_WHEEL=1 conda build --python 3.4 --output-folder dist build-aux/meta.yaml
  stage: build
  only:
    - develop
    - tags
  artifacts:
    name: "$CI_BUILD_NAME"
    expire_in: 1 week
    paths:
      - dist/windows-64/mfix*
  tags:
    - windows

install:pip_update:
  script:
    - env PYTHONPATH=${PYPATH}/lib/python2.7/site-packages ${ANACONDA_BIN}/pip uninstall --yes mfix || true
    - env PYTHONPATH=${PYPATH}/lib/python2.7/site-packages ${ANACONDA_BIN}/pip install dist/linux-64/*27*.whl --prefix=${PYPATH}
  stage: deploy
  only:
    - develop
    - tags
  dependencies:
    - linux_py2_whl
  tags:
    - linux

install:conda_update:
  variables:
    WWW_TOP: /nfs/home/0/users/jenkins_home/userContent/
    CONDA_REPO: /nfs/home/0/users/jenkins_home/userContent/conda
  script:
    - rsync -av dist/ ${CONDA_REPO}/
    - conda index ${CONDA_REPO}/linux-64
    - conda index ${CONDA_REPO}/mac-64
    - conda index ${CONDA_REPO}/win-64
  stage: deploy
  only:
    - develop
    - tags
  dependencies:
    - linux_py2_conda
    - linux_py2_whl
    - linux_py3_conda
    - mac_py3_whl
    - windows_py2_conda
    - windows_py3_conda
    - windows_py3_whl
  tags:
    - linux

install:pylint_update:
  variables:
    WWW_TOP: /nfs/home/0/users/jenkins_home/userContent/
    CONDA_REPO: /nfs/home/0/users/jenkins_home/userContent/conda
  script:
    - pylint -j 4 -f html mfixgui > ${WWW_TOP}/pylint.html
  stage: deploy
  only:
    - develop
    - tags
  tags:
    - linux
