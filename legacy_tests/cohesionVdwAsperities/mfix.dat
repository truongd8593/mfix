! A simple 3-particle DEM case (not coupled) with a weak form of 
! van der Waals cohesive forces using 1 micron asperities

! Author: S. Benyahia, Dec. 2011


!*********************************************************************
! Run Control
!*********************************************************************
  RUN_NAME = 'des_vdw'
  DESCRIPTION = '3 particle case with vdW cohesion'
  RUN_TYPE = 'new'

  UNITS = 'cgs'

  TIME = 0.0          ! start time
  TSTOP = 0.01        ! stop time 
  DT = 1.E-5          ! time step
  DT_MAX = 1.0E-5     ! maximum time step
  DT_MIN = 1.0E-10    ! minimum time step   

! Solve energy eq?  [.TRUE.]
  ENERGY_EQ = .FALSE.

! Solve species eq?  [.TRUE.]
!                 Gas     Sld 1
  SPECIES_EQ = .FALSE.    .FALSE.

! Solve momentum equations?  [.TRUE.] 
!                     Gas   Sld 1
  MOMENTUM_X_EQ(0:1) = .F.   .F.
  MOMENTUM_Y_EQ(0:1) = .F.   .F.
  MOMENTUM_Z_EQ(0:1) = .F.   .F.

! the gas-solid drag model.  ['SYAM_OBRIEN']
  DRAG_TYPE = 'WEN_YU'     ! not used since single phase  

!*********************************************************************
! Numerical Parameters
!*********************************************************************
  MAX_NIT = 60           ! maximum number of iterations [500]

  TOL_RESID   = 0.001    ! max. continuity+momentum residual at 
                         ! convergence [1E-3]

! Discretization scheme
!                [0] : First-order upwinding
!                 1  : First-order upwinding (using down-wind factors)
!                 2  : Superbee (recommended method)
!                3-8 : see readme for details
  DISCRETIZE = 9*2

! Number of iterations in the linear equation solver
!      [LEQ_IT(1,2)=20]
!      [LEQ_IT(3-5)=5]
!      [LEQ_IT(6-9)=15]
  LEQ_IT = 9*200

! The tolerance in the linear equation solver  [1.0D-4]
  LEQ_TOL = 9*1D-10

! The sweep direction for linear equation solver. 
  LEQ_SWEEP = 9*'NONE'

! Use deferred correction method for implementing higher order
! discretization.  Otherwise use down-wind factor method [.FALSE.]
  DEF_COR = .TRUE.


!*********************************************************************
! Geometry 
!*********************************************************************

  COORDINATES = 'cartesian'
  XLENGTH = 0.3     IMAX = 12	! length and cells in x/i direction
  YLENGTH = 0.3     JMAX = 12 	! length and cells in y/j direction
  ZLENGTH = 0.1     KMAX = 4    ! length and cells in z/k direction

  GRAVITY = 981     ! gravitational acceleration (y-direction)


!*********************************************************************
! Gas Phase
!*********************************************************************
  RO_g0 = 0.0       ! constant gas density (granular flow)
  MU_g0 = 0.00018   ! constant viscosity (poise)


! the reference pressure is used to adjust input/output values of 
! pressure to a gauge value.
  P_REF= 1010000.0     ! reference pressure (bayre)


!*********************************************************************
! Solid Phase
!*********************************************************************
  MMAX  =  1         ! number of 'solids' phases
  SOLIDS_MODEL(1) = 'DEM'     ! set the model type for the indicated
                              ! solids
  D_p0  =  7.5D-3     ! particle diameter (75 microns)
  RO_s0 =  1.5      ! particle density



!*********************************************************************
! Initial Conditions
!********************************************************************* 
! currently not coupled so these gas phase settings will not matter
! domain --------------------
  IC_X_w(1)       =       0.0
  IC_X_e(1)       =       0.3
  IC_Y_s(1)       =       0.0
  IC_Y_n(1)       =       0.3
  IC_Z_b(1)       =       0.0
  IC_Z_t(1)       =       0.1

  IC_EP_g(1)      =       1.0    ! set to 1 to skip some unnecessary data
                                 ! checks. ep_g will become based on the
                                 ! supplied particle_input.dat 
  IC_U_g(1)       =       0.0    ! x-dir gas velocity
  IC_V_g(1)       =       1.0    ! y-dir gas velocity
  IC_W_g(1)       =       0.0    ! z-dir gas velocity   

! allows for slight compressibility since gas mw specified not density
  IC_P_g(1)       = 1010000.0    ! pressure (bayre)
  IC_T_g(1)       =     300.0    ! temperature (K)


!*********************************************************************
! Boundary Conditions
!*********************************************************************
! DEM boundary conditions  --------------------
! Mass outlet boundary on top
  BC_X_w(1)  =   0.1
  BC_X_e(1)  =   0.2
  BC_Y_s(1)  =   0.0
  BC_Y_n(1)  =   0.0
  BC_Z_b(1)  =   0.0
  BC_Z_t(1)  =   0.1

  BC_TYPE(1) =   'PO'

  BC_P_g(1)  =   1.01d6  ! pressure (bayre)
  BC_T_g(1)  = 300.0     ! temperature (K)


!*********************************************************************
! Discrete Element Model (DEM) 
!*********************************************************************
  PARTICLES = 3     ! total number of initial particles
                             ! arbitrary factor [1.2]
  NFACTOR = 0     ! length of dem settling period in no. of loops   [10]


! Neighbor search parameters --------------------
  DES_NEIGHBOR_SEARCH = 4     ! Particle neighbor search method [1]
  NEIGHBOR_SEARCH_N = 2     ! number of solids time steps between 
                            ! neighbor search [25]
  FACTOR_RLM =  1.27   ! factor by which the neighbor search radius
                       ! is increased [1.2]. so for cohesive simulations
                       ! it may be important to increase this value to
                       ! accomodate cohesion which occurs at distances
                       ! beyond the particles radii  

! Particle properties --------------------
! (particle-particle, particle-wall collision model parameters)

  KN = 28000        ! normal inter-particle collision spring constant (dyne/cm)
  KT_FAC = 1.0      ! tangential spring factor = KT/KN    [2/7]
  KN_W = 28000     ! normal particle-wall collision spring constant (dyne/cm)
  KT_W_FAC = 1.0    ! Tangential spring factor = KT_W/KN_W   [2/7]

  MEW = 0.3         ! inter-particle friction coeffienct
  MEW_W = 0.3       ! particle-wall friction coefficient

  DES_EN_INPUT(1) = 0.95         ! particle-particle rest coef
  DES_ETAT_FAC = 0.5             ! damping coefficient factor = ETAT/ETAN   [1/2]
  DES_EN_WALL_INPUT = 0.95       ! particle-wall rest coef
  DES_ETAT_W_FAC = 0.5           ! damping coefficient factor = ETAT_W/ETAN_W   [1/2]

! Particle cohesion --------------------
  USE_COHESION=.TRUE.
  VAN_DER_WAALS=.TRUE.

! use vdW short-range cohesive forces
  HAMAKER_CONSTANT = 1D-12     ! (erg)
  WALL_HAMAKER_CONSTANT = 1D-12   
  VDW_INNER_CUTOFF = 4d-8
  WALL_VDW_INNER_CUTOFF = 4d-8
  VDW_OUTER_CUTOFF = 0.002     ! (cm)
  WALL_VDW_OUTER_CUTOFF = 0.002
  Asperities = 1.0D-4     ! use 1 micron size asperities on spherical particles

! these keywords refer to M. Weber square well cohesion model that has
! since been removed from MFIX. To invoke these would require an older
! version of MFIX. Left here for legacy at this time.
#  SQUARE_WELL = .FALSE.  
#  MASTER_WELL_DEPTH = 1e-3
#  MASTER_WALL_WELL_DEPTH = 2e-3
#  RADIUS_RATIO = 1.01
#  WALL_RADIUS_RATIO = 1.01



!*********************************************************************
!  Output Control
!*********************************************************************
  RES_DT     =  0.01     ! Interval (s) to update restart (.RES) file 

! Interval (s) to update .SPX files 
! spx_dt(1) also controls dem output frequency for coupled cases
  SPX_DT(1)  =  1.0E-3   ! Void fraction (EP_g)
  SPX_DT(2)  =  100      ! Gas and solids pressure (P_g, P_star)
  SPX_DT(3)  =  100      ! Gas velocity (U_g, V_g, W_g)
  SPX_DT(4)  =  1.0E+2   ! Solids velocity (U_s, V_s, W_s)
  SPX_DT(5)  =  1.0E+2   ! Solids density (ROP_s)
  SPX_DT(6)  =  1.0E+2   ! Gas and solids temp. (T_g, T_s1, T_s2)
  SPX_DT(7)  =  1.0E+2   ! Gas and solids mass fractions (X_g, X_s)
  SPX_DT(8)  =  1.0E+2   ! Granular Temperature (G)
  SPX_DT(9)  =  1.0E+2   ! User defined scalars

! Display the residuals on the screen and messages about convergence
! on the screen and in the .LOG file. [.FALSE.]
#  FULL_LOG  = .TRUE.

  PRINT_DES_DATA = .T.    ! write DEM data as *.vtp files

!*********************************************************************
! Parallelization Controls
!*********************************************************************
! Number of grid blocks in X/Y/Z directions (i,j,k) for a distributed
! memory parallel simulation   [1]
  NODESI = 1   NODESJ = 1   NODESK = 1
