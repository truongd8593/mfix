! A 1D granular (i.e., no gas phase) dv/dx shear flow case in the
! absence of gravity that uses the Garzo, Hrenya & Dufty (2007) 
! polydisperse kinetic theory. Powder is a binary mixture so that
! mmax = 2

! In GHD momentum and granular temperature are solved for the mixture 
! and not for individual solids phases. Internally the code uses 
! mmax = 3, and smax represents the 'real' number of solids phase 
! (smax = 2).

! Author: S. Benyahia, March 2009
  
!*********************************************************************
! Run Control                             
!*********************************************************************
  RUN_NAME = 'granular_ssf'
  DESCRIPTION = 'Granular simple shear flow (SSF)'
  RUN_TYPE = 'new'
  UNITS = 'cgs'

  TIME = 0.0 
  TSTOP = 1000.0 
  DT = 1.0e-4 
  DT_MIN = 1.0e-4

! Solve energy eq?   [.TRUE.]
  ENERGY_EQ = .FALSE.

! Solve species eq?   [.TRUE.]
!                 Gas     Sld 1     Sld 2
  SPECIES_EQ = 3*.FALSE.

! Solve momentum equations?   [.TRUE.]
! (do not solve gas, solve solids)
!                    Gas      Sld 1
  MOMENTUM_X_EQ(0) = .FALSE.
  MOMENTUM_Y_EQ(0) = .FALSE.

! the kinetic theory model used to describe the solids phase(s)
  KT_TYPE = 'GHD'   
  
! the radial distribution function, that is generally only employed 
! by the specified kinetic theory model   ['LEBOWITZ']
! note GHD theory implementation currently uses its own RDF 
! internally called Chi. 
  RDF_TYPE   = 'LEBOWITZ' 

! the gas-solid drag model.  ['SYAM_OBRIEN']
! note drag will not be used for this granular flow case
  DRAG_TYPE  = 'WEN_YU' 

! Model for frictional/plastic solids phase
  FRICTION_MODEL = 'NONE'


!*********************************************************************
! Numerical Parameters
!*********************************************************************
  MAX_NIT = 100

! factor to normalize gas pressure/solids correction equation(s) 
! residual
!  [undefined] : normalization uses residual from first iteration 
!      0       : normalization based on dominate term in continuity eqn
!  [defined]   : normalized by value provided
  NORM_G = 0.0

  TOL_RESID = 1.0E-6     ! max. continuity+momentum residual at 
                         ! convergence [1E-3]

! Discretization scheme
!                [0] : First-order upwinding
!                 1  : First-order upwinding (using down-wind factors)
!                 2  : Superbee (recommended method)
!                3-8 : see readme for details
  DISCRETIZE = 9*2

! Use deferred correction method for implementing higher order
! discretization. Otherwise use down-wind factor method [.FALSE.]
  DEF_COR = .T.


!*********************************************************************
! Geometry 
!*********************************************************************
  COORDINATES = 'CARTESIAN'

  XLENGTH = 10.0    IMAX = 4   	! length and cells in x/i direction
  YLENGTH = 10.0    JMAX = 1	! length and cells in y/j direction
  NO_K = .TRUE.                 ! 2D, no k direction
  
! make y direction cyclic w/o specified pressure drop
  CYCLIC_Y = .TRUE.

! gravitational acceleration (y-direction)  
  GRAVITY = 0.0     ! no graviational body forces present


!*********************************************************************
! Gas Phase
!*********************************************************************
  MU_g0 = 1.8E-4     ! constant gas viscosity (poise)

! the molecular weight or density must be specified (or species names).
! if density is specified then the molecular weight will be ignored.
! specifying molecular weight allows for compressibility but requires
! setting the pressure and temperature in IC and BC regions
#  MW_avg = 29.0     ! average molecular weight of air (g/g-mol)
  RO_g0 = 0.0     ! no gas phase (i.e. a granular system)


!*********************************************************************
! Solid Phase
!*********************************************************************
! rp1/rp2=4.3904, dp1/dp2=0.714286,  m1/m2=1.6

  MMAX = 2     ! number of 'solids' phases   [1]
  SOLIDS_MODEL(1) = 'TFM'  'TFM'    ! set the model type for the 
                                    ! indicated solids

  RO_s0 = 1.131768484d0     0.257782544d0     ! material particle density(s)
  D_p0(1) = 1.5     ! particle diameter of phase 1
  D_p0(2) = 2.1     ! particle diameter of phase 2

! solids phase(s) forms a packed bed with indicated void fraction
! ep_star
  CLOSE_PACKED = 2*.TRUE.         

  EP_star = 0.4d0     ! packed bed void fraction

! maximum. solids vol. fraction at packing for indicated phase. these
! are used to update the value of ep_star when a polydisperse system
! is involved and a model is invoked to calculate ep_star such as
! yu_standish or fedors_landel   [1-ep_star]
#  ep_s_max(1) = 0.6d0
#  ep_s_max(2) = 0.6d0

! For GHD r_p specifies the coefficient of restitution for particle-
! particle collisions and it replaces C_e 
  r_p(1,1) = 0.7     ! collisions between particles of phase 1
  r_p(2,2) = 0.8     ! collisions between particles of phase 1
  r_p(1,2) = 0.75     ! collisions between particles of phases 1 and 2

! this quantity currently needs to be specified to satisfy error checks
#  C_e = 0.8     ! coefficient of restitution p-p

! these quantities currently do not matter unless invoking certain
! boundary condition routines. they must be set when using Johnson
! and Jackson partial slip bc
#  e_w = 0.7     ! coefficient of resitution for p-w   [1]
#  PHIP = 0.0001     ! specularity coefficient   [0.6]


!*********************************************************************
! Initial Conditions
!*********************************************************************
! solids volume fraction (eps=) of 0.21
! eps1 = 0.1, eps2 = 0.11

! domain --------------------
  IC_X_w(1)       =       0.0
  IC_X_e(1)       =      10.0
  IC_Y_s(1)       =       0.0
  IC_Y_n(1)       =      10.0
 
  IC_EP_g(1)      =       0.79d0
  IC_ROP_s(1,1)   =   @(0.1d0*1.131768484d0)
  IC_ROP_s(1,2)   =   @(0.11d0*0.257782544d0)
 
  IC_U_g(1)       =       0.0
  IC_V_g(1)       =       0.0

! allows for slight compressibility if gas mw specified not density
#  IC_P_g(1)       = 1013250.0     ! pressure (bayre)
#  IC_T_g(1)       =     298.0     ! temperature (K)

  IC_U_s(1,1)     =       0.0
  IC_V_s(1,1)     =       0.0
  IC_Theta_m(1,1) =      10.0d0   ! initial granular temperature
                                  ! for GHD units are g.cm/s^2
  IC_U_s(1,2)     =       0.0
  IC_V_s(1,2)     =       0.0
  IC_Theta_m(1,2) =      10.0d0


!*********************************************************************
! Boundary Conditions
!*********************************************************************
! This is a 1D periodic system (in y-direction) with wall shear (dv/dx)
! implemented through the partial slip wall boundary condition
! IMPORTANT NOTE: GHD requires WALL boundary conditions for the
! mixture phase (mmax = 3) for momentum and granular energy.

! West wall (moving in +y-dir) --------------------
  BC_X_w(5)       =       0.0 
  BC_X_e(5)       =       0.0 
  BC_Y_s(5)       =       0.0
  BC_Y_n(5)       =      10.0
  BC_TYPE(5)      =      'PSW' 
  BC_JJ_PS(5)     =       0      ! do not invoke Johnson-Jackson slip bc

! setup specified wall velocity for solids momentum with shear rate of
! dv/dx=0.1. for set wall velocity bc leave hw undefined and set vw 
! accordingly (note that vw=0 would be no slip).
  BC_Uw_s(5,3)    =       0.0
  BC_Vw_s(5,3)    =       0.5d0
  BC_Ww_s(5,3)    =       0.0
#  BC_hw_s(5, 3)   =       0.0

! setup free slip for gas momentum (although this is a granular system
! with no gas since ro_g0=0). for free slip bc define hw as 0 (vw must
! also be set but it does not matter).
  BC_Uw_g(5)      =       0.0
  BC_Vw_g(5)      =       0.0
  BC_Ww_g(5)      =       0.0
  BC_hw_g(5)      =       0.0

! setup zero flux for granular energy. for zero gradient/flux 
! (~free slip) for granular energy define hw and cw as zero 
! (tw may also be set but its value will not matter when hw is 0)
  BC_hw_Theta_m(5,3) =    0.0
  BC_C_Theta_m(5,3)  =    0.0
#  BC_Thetaw_m(5,3)   =    0.0

! East wall (moving in -y-dir) --------------------
  BC_X_w(6)       =      10.0
  BC_X_e(6)       =      10.0
  BC_Y_s(6)       =       0.0
  BC_Y_n(6)       =      10.0
  BC_TYPE(6)      =      'PSW' 
  BC_JJ_PS(6)     =       0 

! set wall velocity bc for solids momentum
  BC_Uw_s(6,3)    =       0.0
  BC_Vw_s(6,3)    =      -0.5d0
  BC_Ww_s(6,3)    =       0.0
#  BC_hw_s(6, 3)   =       0.0

! free slip bc for gas momentum
  BC_Uw_g(6)      =       0.0 
  BC_Vw_g(6)      =       0.0 
  BC_Ww_g(6)      =       0.0
  BC_hw_g(6)      =       0.0

! zero-gradient (~free-slip) bc for granular energy
  BC_hw_Theta_m(6,3) =    0.0
  BC_C_Theta_m(6,3)  =    0.0
#  BC_Thetaw_m(6,3)   =    0.0


!*********************************************************************
!  Output Control
!*********************************************************************
  RES_DT     =  10       ! Interval (s) to update restart (.RES) file 
  OUT_DT     =  1E5      ! Interval (s) to update standard output (.OUT) file 

! Interval (s) to update .SPX files 
  SPX_DT(1)  =  1.0E+1   ! Void fraction (EP_g)
  SPX_DT(2)  =  1.0E+1   ! Gas and solids pressure (P_g, P_star)
  SPX_DT(3)  =  10.0     ! Gas velocity (U_g, V_g, W_g)
  SPX_DT(4)  =  10.0     ! Solids velocity (U_s, V_s, W_s)
  SPX_DT(5)  =  10.0     ! Solids density (ROP_s)
  SPX_DT(6)  =  10.0     ! Gas and solids temp. (T_g, T_s1, T_s2)
  SPX_DT(7)  =  10.0     ! Gas and solids mass fractions (X_g, X_s)
  SPX_DT(8)  =  10.0     ! Granular Temperature (G)
  SPX_DT(9)  =  10.0     ! User defined scalars

! Display the residuals on the screen and messages about convergence
! on the screen and in the .LOG file.  [.FALSE.]
  FULL_LOG = .TRUE.

! Interval in number of time steps at which .LOG file is written.  [25]
  NLOG = 25

! Specify residuals to be printed as 4-character strings.
! in this case print out information on the mixture solids phase
  RESID_STRING  = 'U3' 'V3' 'W3' 'G3'
  

!*********************************************************************
! Parallelization Controls
!*********************************************************************
! Number of grid blocks in X/Y/Z directions (i,j,k) for a distributed
! memory parallel (DMP) simulation   [1]
  NODESI = 1 
  NODESJ = 1
  NODESK = 1
